# IMPORTANT: Create a .env.local file with these variables filled in
# DO NOT commit .env.local to git (it's in .gitignore)

# ============================================
# SETUP INSTRUCTIONS:
# ============================================

# 1. DATABASE SETUP
# -----------------
# Replace with your actual PostgreSQL connection string
DATABASE_URL="postgresql://user:password@localhost:5432/storyshort?schema=public"

# 2. NEXTAUTH CONFIGURATION
# -------------------------
# Set this to your application URL
# For local development:
NEXTAUTH_URL="http://localhost:3000"

# Generate a secret key by running in terminal:
# openssl rand -base64 32
# Or use: node -e "console.log(require('crypto').randomBytes(32).toString('base64'))"
NEXTAUTH_SECRET="replace-this-with-generated-secret-key"

# 3. GOOGLE OAUTH SETUP
# ---------------------
# Steps to get Google OAuth credentials:
# 1. Go to: https://console.cloud.google.com/
# 2. Create a new project or select existing one
# 3. Go to "APIs & Services" > "Credentials"
# 4. Click "Create Credentials" > "OAuth 2.0 Client ID"
# 5. Select "Web application"
# 6. Add Authorized JavaScript origins:
#    - http://localhost:3000
# 7. Add Authorized redirect URIs:
#    - http://localhost:3000/api/auth/callback/google
# 8. Copy the Client ID and Client Secret below:

GOOGLE_CLIENT_ID="your-google-client-id.apps.googleusercontent.com"
GOOGLE_CLIENT_SECRET="your-google-client-secret"

# 4. GITHUB OAUTH SETUP (Optional)
# --------------------------------
# Steps to get GitHub OAuth credentials:
# 1. Go to: https://github.com/settings/developers
# 2. Click "New OAuth App"
# 3. Fill in:
#    - Application name: StoryShort
#    - Homepage URL: http://localhost:3000
#    - Authorization callback URL: http://localhost:3000/api/auth/callback/github
# 4. Copy the Client ID and Client Secret below:

GITHUB_CLIENT_ID="your-github-client-id"
GITHUB_CLIENT_SECRET="your-github-client-secret"

# ============================================
# AFTER SETUP:
# ============================================
# 1. Run: npx prisma generate
# 2. Run: npx prisma db push
# 3. Run: npm run dev
# 4. Test authentication at: http://localhost:3000/login
